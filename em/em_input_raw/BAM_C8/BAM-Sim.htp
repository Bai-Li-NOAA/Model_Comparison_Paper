#if !defined(_BAM_SIM_)
#  define _BAM_SIM_

class model_data : public ad_comm{
  data_int styr;
  data_int endyr;
  data_int styr_rec_dev;
  data_int endyr_rec_dev;
  data_int endyr_rec_phase1;
  data_int endyr_rec_phase2;
  data_int endyr_selex_phase1;
  double nyrs;
  double nyrs_rec;
  data_int nages;
  data_vector agebins;
  data_int nages_agec;
  data_vector agebins_agec;
  data_number max_F_spr_msy;
  data_int n_iter_spr;
  int n_iter_msy;
  data_int selpar_n_yrs_wgted;
  data_number set_BiasCor;
  data_int nyr_survey1_cpue;
  data_ivector yrs_survey1_cpue;
  data_vector obs_survey1_cpue;
  data_vector survey1_cpue_cv;
  data_int nyr_survey1_agec;
  data_ivector yrs_survey1_agec;
  data_vector nsamp_survey1_agec;
  data_vector nfish_survey1_agec;
  data_matrix obs_survey1_agec;
  data_int styr_fleet1_L;
  data_int endyr_fleet1_L;
  data_vector obs_fleet1_L;
  data_vector fleet1_L_cv;
  data_int nyr_fleet1_agec;
  data_ivector yrs_fleet1_agec;
  data_vector nsamp_fleet1_agec;
  data_vector nfish_fleet1_agec;
  data_matrix obs_fleet1_agec;
  data_vector set_Linf;
  data_vector set_K;
  data_vector set_t0;
  data_vector set_len_cv;
  data_vector set_M_constant;
  data_vector set_steep;
  data_vector set_log_R0;
  data_vector set_R_autocorr;
  data_vector set_rec_sigma;
  data_vector set_log_dm_fleet1_ac;
  data_vector set_log_dm_survey1_ac;
  data_vector set_selpar_A501_fleet1_B1;
  data_vector set_selpar_slope1_fleet1_B1;
  data_vector set_selpar_A502_fleet1_B1;
  data_vector set_selpar_slope2_fleet1_B1;
  data_vector set_selpar_A501_fleet1_B2;
  data_vector set_selpar_slope1_fleet1_B2;
  data_vector set_selpar_A502_fleet1_B2;
  data_vector set_selpar_slope2_fleet1_B2;
  data_vector set_selpar_A501_survey1;
  data_vector set_selpar_slope1_survey1;
  data_vector set_selpar_A502_survey1;
  data_vector set_selpar_slope2_survey1;
  data_vector set_log_q_survey1;
  data_vector set_F_init;
  data_vector set_log_avg_F_fleet1;
  data_vector set_log_F_dev_fleet1;
  data_vector set_log_rec_dev;
  data_vector set_log_Nage_dev;
  data_vector set_log_F_dev_fleet1_vals;
  data_vector set_log_rec_dev_vals;
  data_vector set_log_Nage_dev_vals;
  data_number set_w_L;
  data_number set_w_I_survey1;
  data_number set_w_ac_fleet1;
  data_number set_w_ac_survey1;
  data_number set_w_Nage_init;
  data_number set_w_rec;
  data_number set_w_rec_early;
  data_number set_w_rec_end;
  data_number set_w_Ftune;
  data_number wgtpar_a;
  data_number wgtpar_b;
  data_vector prop_f_obs;
  data_vector maturity_f_obs;
  data_vector set_M;
  data_number spawn_time_frac;
  data_int SR_switch;
  data_int set_Ftune_yr;
  data_number set_Ftune;
  data_number minSS_agec;
  data_matrix age_error;
  data_int endyr_proj;
  data_int styr_regs;
  data_int Fproj_switch;
  data_number Fproj_mult;
  int styr_proj;
  int iyear;
  int iage;
  int ilen;
  int ff;
  double sqrt2pi;
  double g2mt;
  double kg2mt;
  double mt2kg;
  double g2kg;
  double g2klb;
  double mt2klb;
  double mt2lb;
  double dzero;
  double huge_number;
  data_number end_of_data_file;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_number Linf;
  param_init_bounded_number K;
  param_init_bounded_number t0;
  param_init_bounded_number len_cv_val;
  param_vector Linf_out;
  param_vector K_out;
  param_vector t0_out;
  param_vector len_cv_val_out;
  param_vector meanlen_TL;
  param_vector wgt_g;
  param_vector wgt_kg;
  param_vector wgt_mt;
  param_vector wgt_klb;
  param_vector wgt_lb;
  param_matrix pred_survey1_agec;
  param_matrix pred_survey1_agec_allages;
  param_matrix ErrorFree_survey1_agec;
  param_matrix pred_fleet1_agec;
  param_matrix pred_fleet1_agec_allages;
  param_matrix ErrorFree_fleet1_agec;
  param_vector obs_survey1_cpue_allyr;
  param_vector pred_survey1_cpue_allyr;
  param_vector survey1_cpue_cv_allyr;
  param_vector nsamp_survey1_agec_allyr;
  param_vector nsamp_fleet1_agec_allyr;
  param_vector nfish_survey1_agec_allyr;
  param_vector nfish_fleet1_agec_allyr;
  param_vector neff_survey1_agec_allyr_out;
  param_vector neff_fleet1_agec_allyr_out;
  param_matrix N;
  param_matrix N_mdyr;
  param_matrix N_spawn;
  param_init_bounded_vector log_Nage_dev;
  param_vector log_Nage_dev_output;
  param_matrix B;
  param_vector totB;
  param_vector totN;
  param_vector SSB;
  param_vector MatFemB;
  param_vector rec;
  param_vector prop_f;
  param_vector maturity_f;
  param_vector reprod;
  param_init_bounded_number log_R0;
  param_vector log_R0_out;
  param_number R0;
  param_init_bounded_number steep;
  param_vector steep_out;
  param_init_bounded_number rec_sigma;
  param_vector rec_sigma_out;
  param_init_bounded_number R_autocorr;
  param_vector R_autocorr_out;
  param_number rec_sigma_sq;
  param_number rec_logL_add;
  param_init_bounded_dev_vector log_rec_dev;
  param_vector log_rec_dev_output;
  param_vector log_rec_dev_out;
  param_number var_rec_dev;
  param_number sigma_rec_dev;
  param_number BiasCor;
  param_number S0;
  param_number B0;
  param_number R1;
  param_number R_virgin;
  param_vector SdS0;
  param_init_bounded_number log_dm_fleet1_ac;
  param_init_bounded_number log_dm_survey1_ac;
  param_vector log_dm_fleet1_ac_out;
  param_vector log_dm_survey1_ac_out;
  param_matrix sel_survey1;
  param_vector selvec_survey1;
  param_init_bounded_number selpar_A501_survey1;
  param_init_bounded_number selpar_slope1_survey1;
  param_init_bounded_number selpar_A502_survey1;
  param_init_bounded_number selpar_slope2_survey1;
  param_vector selpar_A501_survey1_out;
  param_vector selpar_slope1_survey1_out;
  param_vector selpar_A502_survey1_out;
  param_vector selpar_slope2_survey1_out;
  param_matrix sel_fleet1;
  param_vector selvec_fleet1_B1;
  param_vector selvec_fleet1_B2;
  param_init_bounded_number selpar_A501_fleet1_B1;
  param_init_bounded_number selpar_slope1_fleet1_B1;
  param_init_bounded_number selpar_A502_fleet1_B1;
  param_init_bounded_number selpar_slope2_fleet1_B1;
  param_init_bounded_number selpar_A501_fleet1_B2;
  param_init_bounded_number selpar_slope1_fleet1_B2;
  param_init_bounded_number selpar_A502_fleet1_B2;
  param_init_bounded_number selpar_slope2_fleet1_B2;
  param_vector selpar_A501_fleet1_B1_out;
  param_vector selpar_slope1_fleet1_B1_out;
  param_vector selpar_A502_fleet1_B1_out;
  param_vector selpar_slope2_fleet1_B1_out;
  param_vector selpar_A501_fleet1_B2_out;
  param_vector selpar_slope1_fleet1_B2_out;
  param_vector selpar_A502_fleet1_B2_out;
  param_vector selpar_slope2_fleet1_B2_out;
  param_vector sel_wgted_L;
  param_vector sel_wgted_tot;
  param_vector pred_survey1_cpue;
  param_matrix N_survey1;
  param_init_bounded_number log_q_survey1;
  param_vector log_q_survey1_out;
  param_matrix L_fleet1_num;
  param_matrix L_fleet1_mt;
  param_vector pred_fleet1_L_knum;
  param_vector pred_fleet1_L_mt;
  param_matrix L_total_num;
  param_matrix L_total_mt;
  param_vector L_total_knum_yr;
  param_vector L_total_mt_yr;
  param_number F_fleet1_prop;
  param_number F_init_fleet1_prop;
  param_number F_temp_sum;
  param_vector F_end;
  param_vector F_end_L;
  param_number F_end_apex;
  param_number SSB_msy_out;
  param_number F_msy_out;
  param_number msy_mt_out;
  param_number msy_knum_out;
  param_number B_msy_out;
  param_number R_msy_out;
  param_number spr_msy_out;
  param_number F30_dum;
  param_number F35_dum;
  param_number F40_dum;
  param_number F30_out;
  param_number F35_out;
  param_number F40_out;
  param_number SSB_F35_out;
  param_number B_F35_out;
  param_number R_F35_out;
  param_number L_F35_knum_out;
  param_number L_F35_mt_out;
  param_number D_F35_knum_out;
  param_number D_F35_mt_out;
  param_vector wgt_wgted_L_mt;
  param_vector N_age_msy;
  param_vector N_age_msy_spawn;
  param_vector L_age_msy;
  param_vector Z_age_msy;
  param_vector F_L_age_msy;
  param_vector F_msy;
  param_vector spr_msy;
  param_vector R_eq;
  param_vector L_eq_mt;
  param_vector L_eq_knum;
  param_vector SSB_eq;
  param_vector B_eq;
  param_vector FdF_msy;
  param_vector FdF35;
  param_vector SdSSB_msy;
  param_number SdSSB_msy_end;
  param_number FdF_msy_end;
  param_number FdF_msy_end_mean;
  param_vector SdSSB_F35;
  param_vector Sdmsst_F35;
  param_number SdSSB_F35_end;
  param_number Sdmsst_F35_end;
  param_number FdF35_end_mean;
  param_number Fend_mean_temp;
  param_number Fend_mean;
  param_vector L_age_F35;
  param_number iter_inc_msy;
  param_vector M;
  param_number smsy2msst;
  param_number smsy2msst75;
  param_matrix F;
  param_vector Fsum;
  param_vector Fapex;
  param_matrix Z;
  param_init_bounded_number log_avg_F_fleet1;
  param_vector log_avg_F_fleet1_out;
  param_init_bounded_dev_vector log_F_dev_fleet1;
  param_vector log_F_dev_fleet1_out;
  param_matrix F_fleet1;
  param_vector F_fleet1_out;
  param_number log_F_dev_init_fleet1;
  param_number log_F_dev_end_fleet1;
  param_init_bounded_number F_init;
  param_vector F_init_out;
  param_vector N_age_spr;
  param_vector N_age_spr_spawn;
  param_vector L_age_spr;
  param_vector Z_age_spr;
  param_vector spr_static;
  param_vector F_L_age_spr;
  param_vector F_spr;
  param_vector spr_spr;
  param_vector spr_ratio;
  param_vector L_spr;
  param_vector N_spr_F0;
  param_vector N_bpr_F0;
  param_vector N_spr_initial;
  param_vector N_initial_eq;
  param_vector F_initial;
  param_vector Z_initial;
  param_number spr_initial;
  param_number spr_F0;
  param_number bpr_F0;
  param_number rec_mean;
  param_number iter_inc_spr;
  param_number sdnr_I_survey1;
  param_number sdnr_ac_survey1;
  param_number sdnr_ac_fleet1;
  param_number w_L;
  param_number w_I_survey1;
  param_number w_ac_fleet1;
  param_number w_ac_survey1;
  param_number w_Nage_init;
  param_number w_rec;
  param_number w_rec_early;
  param_number w_rec_end;
  param_number w_Ftune;
  param_number f_fleet1_L;
  param_number f_survey1_cpue;
  param_number f_fleet1_agec;
  param_number f_survey1_agec;
  param_number f_Nage_init;
  param_number f_rec_dev;
  param_number f_rec_dev_early;
  param_number f_rec_dev_end;
  param_number f_Ftune;
  param_number f_priors;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value fval;
  param_number fval_data;
  param_number grad_max;
  param_number denom;
  param_number numer;
  param_number F_reg_proj;
  param_vector F_proj;
  param_vector L_knum_proj;
  param_vector L_mt_proj;
  param_vector B_proj;
  param_vector SSB_proj;
  param_vector R_proj;
  param_vector FL_age_proj;
  param_matrix N_proj;
  param_matrix N_spawn_proj;
  param_matrix Z_proj;
  param_matrix L_age_proj;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void){}
  void get_length_weight_at_age(void);
  void get_reprod(void);
  void get_spr_F0(void);
  void get_selectivity(void);
  void get_mortality(void);
  void get_bias_corr(void);
  void get_numbers_at_age(void);
  void get_landings_numbers(void);
  void get_landings_wgt(void);
  void get_indices(void);
  void get_age_comps(void);
  void get_weighted_current(void);
  void get_msy(void);
  void get_per_recruit_stuff(void);
  void get_miscellaneous_stuff(void);
  void get_projection(void);
  void evaluate_objective_function(void);
 dvar_vector logistic(const dvar_vector& ages, const dvariable& L50, const dvariable& slope);
 dvar_vector logistic_peak(const dvar_vector& ages, const dvariable& L50, const dvariable& slope, const dvariable& peak);
 dvar_vector logistic_exponential(const dvar_vector& ages, const dvariable& L50, const dvariable& slope, const dvariable& sigma, const dvariable& joint);
 dvar_vector logistic_double(const dvar_vector& ages, const dvariable& L501, const dvariable& slope1, const dvariable& L502, const dvariable& slope2);
 dvar_vector logistic_joint(const dvar_vector& ages, const dvariable& L501, const dvariable& slope1, const dvariable& L502, const dvariable& slope2, const dvariable& satval, const dvariable& joint);
 dvar_vector gaussian_double(const dvar_vector& ages, const dvariable& peak, const dvariable& top, const dvariable& ascwid, const dvariable& deswid, const dvariable& init, const dvariable& final);
 dvariable SR_func(const dvariable& R0, const dvariable& h, const dvariable& spr_F0, const dvariable& SSB, int func);
 dvariable SR_eq_func(const dvariable& R0, const dvariable& h, const dvariable& spr_F0, const dvariable& spr_F, const dvariable& BC, int func);
 dvariable multinom_eff_N(const dvar_vector& pred_comp, const dvar_vector& obs_comp);
 dvariable lk_lognormal(const dvar_vector& pred, const dvar_vector& obs, const dvar_vector& cv, const dvariable& wgt_dat);
 dvariable lk_multinomial(const dvar_vector& nsamp, const dvar_matrix& pred_comp, const dvar_matrix& obs_comp, const double& ncomp, const double& minSS, const dvariable& wgt_dat);
 dvariable lk_robust_multinomial(const dvar_vector& nsamp, const dvar_matrix& pred_comp, const dvar_matrix& obs_comp, const double& ncomp, const dvariable& mbin, const double& minSS, const dvariable& wgt_dat);
 dvariable lk_dirichlet_multinomial(const dvar_vector& nsamp, const dvar_matrix& pred_comp, const dvar_matrix& obs_comp, const double& ncomp, const dvariable& mbin, const double& minSS, const dvariable& log_dir_par);
 dvariable lk_logistic_normal(const dvar_vector& nsamp, const dvar_matrix& pred_comp, const dvar_matrix& obs_comp, const double& ncomp, const dvariable& mbin, const double& minSS);
 dvariable neg_log_prior(dvariable pred, const double& prior, dvariable var, int pdf);
 dvariable sdnr_multinomial(const double& ncomp, const dvar_vector& ages, const dvar_vector& nsamp, 
                                    const dvar_matrix& pred_comp, const dvar_matrix& obs_comp, const dvariable& wgt_dat);
 dvariable sdnr_lognormal(const dvar_vector& pred, const dvar_vector& obs, const dvar_vector& cv, const dvariable& wgt_dat);

};
#endif
